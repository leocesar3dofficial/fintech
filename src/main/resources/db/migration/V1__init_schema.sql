-- =====================================
-- V1__init_schema.sql
-- Initial schema for finance app
-- =====================================

-- === Table: users ===
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(255),
    username VARCHAR(255),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (email)
);

CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = CURRENT_TIMESTAMP;
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_updated_at
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- === Table: categories ===
CREATE TABLE categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    is_income BOOLEAN NOT NULL,
    user_id UUID NOT NULL
);

-- === Table: accounts ===
CREATE TABLE accounts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type VARCHAR(255),
    institution VARCHAR(255),
    balance NUMERIC(10,2) DEFAULT 0,
    created_at DATE DEFAULT CURRENT_DATE,
    user_id UUID NOT NULL
);

-- === Table: budgets ===
CREATE TABLE budgets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount NUMERIC(10,2) NOT NULL,
    month VARCHAR(7) NOT NULL,
    category_id BIGINT NOT NULL,
    user_id UUID NOT NULL
);

-- === Table: goals ===
CREATE TABLE goals (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    target_amount NUMERIC(10,2) NOT NULL,
    current_amount NUMERIC(10,2) DEFAULT 0,
    due_month VARCHAR(7) NOT NULL,
    account_id BIGINT NOT NULL,
    category_id BIGINT NOT NULL,
    user_id UUID NOT NULL
);

-- === Table: transactions ===
CREATE TABLE transactions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount NUMERIC(10,2) NOT NULL,
    date DATE NOT NULL,
    is_recurring BOOLEAN DEFAULT FALSE,
    description VARCHAR(255),
    account_id BIGINT NOT NULL,
    category_id BIGINT NOT NULL
);

-- === Foreign Key Constraints ===
ALTER TABLE accounts
    ADD CONSTRAINT fk_accounts_user FOREIGN KEY (user_id) REFERENCES users;

ALTER TABLE budgets
    ADD CONSTRAINT fk_budgets_category FOREIGN KEY (category_id) REFERENCES categories,
    ADD CONSTRAINT fk_budgets_user FOREIGN KEY (user_id) REFERENCES users;

ALTER TABLE categories
    ADD CONSTRAINT fk_categories_user FOREIGN KEY (user_id) REFERENCES users;

ALTER TABLE goals
    ADD CONSTRAINT fk_goals_account FOREIGN KEY (account_id) REFERENCES accounts,
    ADD CONSTRAINT fk_goals_user FOREIGN KEY (user_id) REFERENCES users;

ALTER TABLE transactions
    ADD CONSTRAINT fk_transactions_account FOREIGN KEY (account_id) REFERENCES accounts,
    ADD CONSTRAINT fk_transactions_category FOREIGN KEY (category_id) REFERENCES categories;

-- === Indexes (optional for performance) ===
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_categories_user_id ON categories(user_id);
CREATE INDEX idx_accounts_user_id ON accounts(user_id);
CREATE INDEX idx_budgets_user_id ON budgets(user_id);

CREATE INDEX idx_goals_user_id ON goals(user_id);
CREATE INDEX idx_transactions_account_id ON transactions(account_id);
