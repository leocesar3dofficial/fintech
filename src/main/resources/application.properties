# =============================================================================
# FINTECH APPLICATION CONFIGURATION
# =============================================================================

# -----------------------------------------------------------------------------
# Application Settings
# -----------------------------------------------------------------------------
spring.application.name=fintech
server.servlet.context-path=/api

# Frontend integration
app.frontend.url=http://localhost:3000
cors.allowed.origins=http://localhost:3000

# -----------------------------------------------------------------------------
# Security & JWT
# -----------------------------------------------------------------------------
jwt.secret=segredo_super_secreto_32_bytes_minimum_length!!

# -----------------------------------------------------------------------------
# Database Configuration (PostgreSQL)
# -----------------------------------------------------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/finance
spring.datasource.username=admin
spring.datasource.password=admin

# Connection Pool (HikariCP)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10

# -----------------------------------------------------------------------------
# JPA / Hibernate Configuration
# -----------------------------------------------------------------------------
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

# Schema Generation (One-time use only - uncomment when needed)
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/schema.sql
# spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata

# -----------------------------------------------------------------------------
# Database Migration (Flyway)
# -----------------------------------------------------------------------------
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# -----------------------------------------------------------------------------
# Caching Configuration
# -----------------------------------------------------------------------------
spring.cache.type=simple
# Alternative: Caffeine cache (uncomment to use)
# spring.cache.type=caffeine
# spring.cache.caffeine.spec=maximumSize=30,expireAfterAccess=5m

# -----------------------------------------------------------------------------
# Email Configuration (Development/Local)
# -----------------------------------------------------------------------------
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=noreply@your-domain.com
# spring.mail.password=production-password
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# -----------------------------------------------------------------------------
# Monitoring & Management (Actuator)
# -----------------------------------------------------------------------------
management.endpoints.web.exposure.include=caches,metrics
management.endpoint.caches.enabled=true
management.metrics.export.caffeine.enabled=true

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# logging.file.name=logs/springboot.log

# Component-specific logging levels
logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver=ERROR
logging.level.org.hibernate.orm.connections.pooling=ERROR

# Debug levels (adjust as needed)
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.aop=DEBUG
# logging.level.root=DEBUG