spring.application.name=fintech
logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver=ERROR
logging.level.org.hibernate.orm.connections.pooling=ERROR

# --- PostgreSQL config ---
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.url=jdbc:postgresql://localhost:5432/finance
spring.datasource.username=admin
spring.datasource.password=admin

# --- JPA / Hibernate ---
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

# Only Do This Once!
# Generate the schema based on your JPA entities and write it to target/schema.sql during app startup
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/schema.sql
# spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata

# --- JWT ---
jwt.secret=segredo_super_secreto_32_bytes_minimum_length!!

# --- Flyway ---
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# --- Email ---
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.username: your-email@gmail.com
spring.mail.password: your-app-password
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls:
spring.mail.properties.mail.smtp.starttls.enable: true

app.frontend.url: http://localhost:3000
