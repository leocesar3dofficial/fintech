# =============================================================================
# FINTECH APPLICATION CONFIGURATION - COMMON
# =============================================================================
# Application Settings
spring.application.name=fintech
server.servlet.context-path=/api
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
server.port=${SERVER_PORT:8080}

# Frontend Integration
app.frontend.url=${FRONTEND_URL:http://localhost:3000}
cors.allowed.origins=${CORS_ORIGINS:http://localhost:3000}

# Security & JWT
jwt.secret=${JWT_SECRET:default_dev_secret_key_32_bytes_minimum_length!!}

# Database Configuration
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/finance}
spring.datasource.username=${DB_USERNAME:admin}
spring.datasource.password=${DB_PASSWORD:admin}

# Connection Pool Configuration
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}

# Database Migration (Flyway)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Caching Configuration
spring.cache.type=${CACHE_TYPE:simple}
spring.cache.caffeine.spec=${CACHE_SPEC:maximumSize=100,expireAfterAccess=5m}

# Email Configuration
spring.mail.host=${SMTP_HOST:localhost}
spring.mail.port=${SMTP_PORT:1025}
spring.mail.username=${SMTP_USERNAME:}
spring.mail.password=${SMTP_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${SMTP_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${SMTP_STARTTLS:false}

# Monitoring & Management (Actuator)
management.endpoints.web.exposure.include=health,info,caches,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.caches.enabled=true
management.metrics.export.caffeine.enabled=true

# Logging Configuration
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.your.package.name=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver=ERROR
logging.level.org.hibernate.orm.connections.pooling=ERROR

# Security Configuration
server.error.include-message=on-param
server.error.include-binding-errors=on-param